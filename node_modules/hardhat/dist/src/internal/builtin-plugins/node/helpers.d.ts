import type { EdrNetworkAccountsConfig } from "../../../types/config.js";
import type { EdrProvider } from "../network-manager/edr/edr-provider.js";
export declare function formatEdrNetworkConfigAccounts(config: EdrNetworkAccountsConfig): Promise<string>;
/**
 * Creates a handler function that will be called on buildInfo file creations
 * (triggered from the compilation pipeline); the handler reads the build info
 * file and uploads the key details into the EDR instance.
 *
 * @param buildInfoDirPath - The path (under artifacts) to the build info
 * directory
 * @param provider - The EDR provider being updated.
 * @returns The handler function that is called with the buildId to upload.
 */
export declare function createBuildInfoUploadHandlerFrom(buildInfoDirPath: string, provider: EdrProvider, log: debug.Debugger): (buildId: string) => Promise<void>;
export declare function getPublicPrivateKeysWarning(): string;
//# sourceMappingURL=helpers.d.ts.map